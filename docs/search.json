[{"path":"https://gladkia.github.io/igvShiny/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 igvShiny authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"igvshiny","dir":"Articles","previous_headings":"","what":"igvShiny","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"igvShiny package wrapper Integrative Genomics Viewer (IGV). comprises htmlwidget version IGV. can used module Shiny apps.","code":""},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"igvShiny\")"},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the package","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"","code":"library(igvShiny)"},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"running-minimal-shiny-app","dir":"Articles","previous_headings":"","what":"Running minimal Shiny app","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"Running minimal Shiny app igvShiny simple : providing genome details via parseAndValidateGenomeSpec using igvShinyOutput UI function using renderIgvShiny server function minimal Shiny app make look like:","code":"library(igvShiny) options <- parseAndValidateGenomeSpec(genomeName=\"hg38\",  initialLocus=\"NDUFS2\") if (interactive()) {     ui <- shinyUI(fluidPage(igvShinyOutput('igvShiny'), width = 10))     server <-         function(input, output, session) {             output$igvShiny <- renderIgvShiny({                 igvShiny(options)             })             }     runApp(shinyApp(ui = ui, server = server))     }"},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"providing-genome-details","dir":"Articles","previous_headings":"","what":"Providing genome details","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"Multiple genomes currently supported IGV: link. igvShiny set genomes called stock genomes. One can select stock genome easily running parseAndValidateGenomeSpec single genomeName value properly assigned. example use popular mouse genome one need run: list available stock genomes igvShiny can found : See also demo app stock genomes one can select genome interest familiarize basic functionalities provided via igvShiny: ’s also possible use custom genomes (.e. non-stock genomes). cases one provide data : FASTA file, FASTA index file genome annotation file. files can provided local paths (dataMode = localFiles via URLs (dataMode = http). See examples cases. See also demo apps custom genomes data provided via URLs: well data provided via local files:","code":"igvShiny::parseAndValidateGenomeSpec(\"mm10\") #> $stockGenome #> [1] TRUE #>  #> $dataMode #> [1] NA #>  #> $validated #> [1] TRUE #>  #> $genomeName #> [1] \"mm10\" #>  #> $initialLocus #> [1] \"all\" #>  #> $fasta #> [1] NA #>  #> $fastaIndex #> [1] NA #>  #> $annotation #> [1] NA igvShiny::get_css_genomes() #>  [1] \"hs1\"             \"chm13v1.1\"       \"hg38\"            \"hg38_1kg\"        #>  [5] \"hg19\"            \"hg18\"            \"mm39\"            \"mm10\"            #>  [9] \"mm9\"             \"rn7\"             \"rn6\"             \"gorGor6\"         #> [13] \"gorGor4\"         \"panTro6\"         \"panTro5\"         \"panTro4\"         #> [17] \"macFas5\"         \"GCA_011100615.1\" \"panPan2\"         \"canFam6\"         #> [21] \"canFam5\"         \"canFam4\"         \"canFam3\"         \"bosTau9\"         #> [25] \"bosTau8\"         \"susScr11\"        \"galGal6\"         \"GCF_016699485.2\" #> [29] \"danRer11\"        \"danRer10\"        \"ce11\"            \"dm6\"             #> [33] \"dm3\"             \"dmel_r5.9\"       \"sacCer3\"         \"ASM294v2\"        #> [37] \"ASM985889v3\"     \"tair10\"          \"GCA_003086295.2\" \"GCF_001433935.1\" #> [41] \"NC_016856.1\"     \"GCA_000182895.1\" library(igvShiny) demo_app_file <- system.file(package= \"igvShiny\", \"demos\", \"stockGenomesDemo.R\")     if (interactive()) {         shiny::runApp(demo_app_file)         } library(igvShiny)  # defining custom genome with data provided via URLs base_url <- \"https://gladki.pl/igvr/testFiles\" title <- \"ribo remote\" fasta_file <- sprintf(\"%s/%s\", base_url, \"ribosomal-RNA-gene.fasta\") fastaIndex_file <- sprintf(\"%s/%s\", base_url, \"ribosomal-RNA-gene.fasta.fai\") annotation_file <- sprintf(\"%s/%s\", base_url, \"ribosomal-RNA-gene.gff3\") locus <- \"U13369.1:7,276-8,225\" genomeOptions <- parseAndValidateGenomeSpec(     genomeName = title,     initialLocus = locus,     stockGenome = FALSE,     dataMode = \"http\",     fasta = fasta_file,     fastaIndex = fastaIndex_file,     genomeAnnotation = annotation_file     ) genomeOptions #> $stockGenome #> [1] FALSE #>  #> $dataMode #> [1] \"http\" #>  #> $validated #> [1] TRUE #>  #> $genomeName #> [1] \"ribo remote\" #>  #> $fasta #> [1] \"https://gladki.pl/igvr/testFiles/ribosomal-RNA-gene.fasta\" #>  #> $fastaIndex #> [1] \"https://gladki.pl/igvr/testFiles/ribosomal-RNA-gene.fasta.fai\" #>  #> $initialLocus #> [1] \"U13369.1:7,276-8,225\" #>  #> $annotation #> [1] \"https://gladki.pl/igvr/testFiles/ribosomal-RNA-gene.gff3\"  # defining custom genome with data provided with local files data_directory <- system.file(package = \"igvShiny\", \"extdata\") fasta_file      <- file.path(data_directory, \"ribosomal-RNA-gene.fasta\") fastaIndex_file <- file.path(data_directory, \"ribosomal-RNA-gene.fasta.fai\") annotation_file <- file.path(data_directory, \"ribosomal-RNA-gene.gff3\") genomeOptions2 <- parseAndValidateGenomeSpec(     genomeName = \"ribo local\",     initialLocus = \"U13369.1:7,276-8,225\",     stockGenome = FALSE,     dataMode = \"localFiles\",     fasta = fasta_file,     fastaIndex = fastaIndex_file,     genomeAnnotation = annotation_file     ) genomeOptions2 #> $stockGenome #> [1] FALSE #>  #> $dataMode #> [1] \"localFiles\" #>  #> $validated #> [1] TRUE #>  #> $genomeName #> [1] \"ribo local\" #>  #> $fasta #> [1] \"/__w/_temp/Library/igvShiny/extdata/ribosomal-RNA-gene.fasta\" #>  #> $fastaIndex #> [1] \"/__w/_temp/Library/igvShiny/extdata/ribosomal-RNA-gene.fasta.fai\" #>  #> $initialLocus #> [1] \"U13369.1:7,276-8,225\" #>  #> $annotation #> [1] \"/__w/_temp/Library/igvShiny/extdata/ribosomal-RNA-gene.gff3\" library(igvShiny) demo_app_file <- system.file(     package = \"igvShiny\",      \"demos\",      \"igvShinyDemo-customGenome-http.R\"     ) if (interactive()) {     shiny::runApp(demo_app_file)     } library(igvShiny) demo_app_file <-     system.file(         package = \"igvShiny\",          \"demos\",          \"igvShinyDemo-customGenome-localFiles.R\") if (interactive()) {     shiny::runApp(demo_app_file)     }"},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"main-functionalities","dir":"Articles","previous_headings":"","what":"Main functionalities","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"principle igvShiny provides functionalities one can find igv.js. summary following actions currently possible (wrapped R helpers): Bed BedGraph Seg GWAS Bam Cram Vcf GFF3 showGenomicRegion (zoom show nominated region, chromosome locus gene symbol) getGenomicRegion (return current IGV region) removeUserAddedTracks (remove tracks browser, added session user) See also demo app familiarize basic functionalities provided igvShiny:","code":"library(igvShiny) demo_app_file <- system.file(package= \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {     shiny::runApp(demo_app_file)     }"},{"path":"https://gladkia.github.io/igvShiny/articles/igvShiny.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"igvShiny: a wrapper of IGV in the Shiny apps","text":"","code":"sessionInfo() #> R version 4.5.1 (2025-06-13) #> Platform: x86_64-pc-linux-gnu #> Running under: Ubuntu 24.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #> [1] igvShiny_1.5.1       shiny_1.11.1         GenomicRanges_1.60.0 #> [4] GenomeInfoDb_1.44.2  IRanges_2.42.0       S4Vectors_0.46.0     #> [7] BiocGenerics_0.54.0  generics_0.1.4       BiocStyle_2.36.0     #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.10             futile.options_1.0.1    stringi_1.8.7           #>  [4] digest_0.6.37           magrittr_2.0.3          RColorBrewer_1.1-3      #>  [7] evaluate_1.0.5          bookdown_0.44           fastmap_1.2.0           #> [10] jsonlite_2.0.0          backports_1.5.0         formatR_1.14            #> [13] promises_1.3.3          BiocManager_1.30.26     httr_1.4.7              #> [16] scales_1.4.0            UCSC.utils_1.4.0        randomcoloR_1.1.0.1     #> [19] textshaping_1.0.1       jquerylib_0.1.4         cli_3.6.5               #> [22] rlang_1.1.6             XVector_0.48.0          futile.logger_1.4.3     #> [25] cachem_1.1.0            yaml_2.3.10             Rtsne_0.17              #> [28] tools_4.5.1             checkmate_2.3.3         colorspace_2.1-1        #> [31] httpuv_1.6.16           GenomeInfoDbData_1.2.14 lambda.r_1.2.4          #> [34] curl_7.0.0              R6_2.6.1                mime_0.13               #> [37] lifecycle_1.0.4         stringr_1.5.1           fs_1.6.6                #> [40] V8_6.0.6                htmlwidgets_1.6.4       ragg_1.4.0              #> [43] cluster_2.1.8.1         desc_1.4.3              pkgdown_2.1.3           #> [46] bslib_0.9.0             later_1.4.4             glue_1.8.0              #> [49] Rcpp_1.1.0              systemfonts_1.2.3       xfun_0.53               #> [52] knitr_1.50              farver_2.1.2            xtable_1.8-4            #> [55] htmltools_0.5.8.1       rmarkdown_2.29          compiler_4.5.1"},{"path":"https://gladkia.github.io/igvShiny/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Shannon. Author. Arkadiusz Gladki. Author, maintainer. Karolina Scigocka. Author.","code":""},{"path":"https://gladkia.github.io/igvShiny/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shannon P, Gladki , Scigocka K (2025). igvShiny: igvShiny: wrapper Integrative Genomics Viewer (IGV - interactive tool visualization exploration integrated genomic data). R package version 1.5.1, https://github.com/gladkia/igvShiny.","code":"@Manual{,   title = {igvShiny: igvShiny: a wrapper of Integrative Genomics Viewer (IGV - an interactive tool for visualization and exploration integrated genomic data)},   author = {Paul Shannon and Arkadiusz Gladki and Karolina Scigocka},   year = {2025},   note = {R package version 1.5.1},   url = {https://github.com/gladkia/igvShiny}, }"},{"path":"https://gladkia.github.io/igvShiny/reference/GWASTrack-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for GWASTrack — GWASTrack-class","title":"Constructor for GWASTrack — GWASTrack-class","text":"GWASTrack creates IGV manhattan track GWAS data","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/GWASTrack-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for GWASTrack — GWASTrack-class","text":"","code":"GWASTrack(   trackName,   data,   chrom.col,   pos.col,   pval.col,   trackHeight = 50,   autoscale = TRUE,   minY = 0,   maxY = 30 )"},{"path":"https://gladkia.github.io/igvShiny/reference/GWASTrack-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for GWASTrack — GWASTrack-class","text":"trackName character string, used track label igv, recommend unique names per track. data data.frame url pointing one, whose structure described chrom.col, pos.col, pval.col chrom.col numeric, column number chromosome column pos.col numeric, column number position column pval.col numeric, column number GWAS pvalue column trackHeight numeric pixels autoscale logical minY numeric explicit (non-auto) scaling maxY numeric explicit (non-auto) scaling","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/GWASTrack-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for GWASTrack — GWASTrack-class","text":"GWASTrack object","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/GWASTrack-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for GWASTrack — GWASTrack-class","text":"","code":"file <-   # a local gwas file   system.file(package = \"igvShiny\", \"extdata\", \"gwas-5k.tsv.gz\") tbl.gwas <- read.table(file,                        sep = \"\\t\",                        header = TRUE,                        quote = \"\") dim(tbl.gwas) #> [1] 4949   34 track <-   GWASTrack(     \"gwas 5k\",     tbl.gwas,     chrom.col = 12,     pos.col = 13,     pval.col = 28   ) getUrl(track) #> [1] \"/tmp/RtmptBkGyy/tracks/file186b347f65cc.gwas\"  url <- \"https://gladki.pl/igvShiny/gwas_sample.tsv.gz\" track <- GWASTrack(   \"remote url gwas\",   url,   chrom.col = 3,   pos.col = 4,   pval.col = 10,   autoscale = FALSE,   minY = 0,   maxY = 300,   trackHeight = 100 ) getUrl(track) #> [1] \"https://gladki.pl/igvShiny/gwas_sample.tsv.gz\""},{"path":"https://gladkia.github.io/igvShiny/reference/display.html","id":null,"dir":"Reference","previous_headings":"","what":"display the already constructed and configured track — display,GWASTrack-method","title":"display the already constructed and configured track — display,GWASTrack-method","text":"display already constructed configured track","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/display.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"display the already constructed and configured track — display,GWASTrack-method","text":"","code":"# S4 method for class 'GWASTrack' display(obj, session, id, deleteTracksOfSameName = TRUE)"},{"path":"https://gladkia.github.io/igvShiny/reference/display.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"display the already constructed and configured track — display,GWASTrack-method","text":"obj object class GWASTrack session Shiny session object id character identifier target igv object browser deleteTracksOfSameName logical avoid duplications track names","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/display.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"display the already constructed and configured track — display,GWASTrack-method","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/display.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"display the already constructed and configured track — display,GWASTrack-method","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/getUrl.html","id":null,"dir":"Reference","previous_headings":"","what":"the url of the gwas table — getUrl,GWASTrack-method","title":"the url of the gwas table — getUrl,GWASTrack-method","text":"url gwas table","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/getUrl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the url of the gwas table — getUrl,GWASTrack-method","text":"","code":"# S4 method for class 'GWASTrack' getUrl(obj)"},{"path":"https://gladkia.github.io/igvShiny/reference/getUrl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"the url of the gwas table — getUrl,GWASTrack-method","text":"obj object class GWASTrack","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/getUrl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"the url of the gwas table — getUrl,GWASTrack-method","text":"character","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/getUrl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the url of the gwas table — getUrl,GWASTrack-method","text":"","code":"file <-   # a local gwas file   system.file(package = \"igvShiny\", \"extdata\", \"gwas-5k.tsv.gz\") tbl.gwas <- read.table(file,                        sep = \"\\t\",                        header = TRUE,                        quote = \"\") track <-   GWASTrack(     \"gwas 5k\",     tbl.gwas,     chrom.col = 12,     pos.col = 13,     pval.col = 28   ) getUrl(track) #> [1] \"/tmp/RtmptBkGyy/tracks/file186be63c3eb.gwas\""},{"path":"https://gladkia.github.io/igvShiny/reference/get_basic_genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"get_basic_genomes — get_basic_genomes","title":"get_basic_genomes — get_basic_genomes","text":"helper function basic genomes, obtains genome codes (e.g. 'hg38')","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_basic_genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_basic_genomes — get_basic_genomes","text":"","code":"get_basic_genomes()"},{"path":"https://gladkia.github.io/igvShiny/reference/get_basic_genomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_basic_genomes — get_basic_genomes","text":"list short genome codes, e.g., \"hg38\", \"dm6\"","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_basic_genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_basic_genomes — get_basic_genomes","text":"","code":"bs <- get_basic_genomes()"},{"path":"https://gladkia.github.io/igvShiny/reference/get_cas_genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"get_cas_genomes — get_cas_genomes","title":"get_cas_genomes — get_cas_genomes","text":"helper function common always available stock genomes, obtains genome codes (e.g. 'hg38')","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_cas_genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_cas_genomes — get_cas_genomes","text":"","code":"get_cas_genomes()"},{"path":"https://gladkia.github.io/igvShiny/reference/get_cas_genomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_cas_genomes — get_cas_genomes","text":"list short genome codes, e.g., \"hg38\", \"dm6\"","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_cas_genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_cas_genomes — get_cas_genomes","text":"","code":"cas <- get_cas_genomes()"},{"path":"https://gladkia.github.io/igvShiny/reference/get_css_genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"get_css_genomes — get_css_genomes","title":"get_css_genomes — get_css_genomes","text":"helper function mostly internal use, obtains genome codes (e.g. 'hg38') supported igv.js","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_css_genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_css_genomes — get_css_genomes","text":"","code":"get_css_genomes(test = FALSE)"},{"path":"https://gladkia.github.io/igvShiny/reference/get_css_genomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_css_genomes — get_css_genomes","text":"test logical(1) defaults FALSE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_css_genomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_css_genomes — get_css_genomes","text":"list short genome codes, e.g., \"hg38\", \"dm6\", \"tair10\"","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_css_genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_css_genomes — get_css_genomes","text":"","code":"css <- get_css_genomes(test = TRUE)"},{"path":"https://gladkia.github.io/igvShiny/reference/get_tracks_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"get_tracks_dir Get the directory where tracks are stored. The directory can be defined with environmental variable. If not defined the default is a directory called ","title":"get_tracks_dir Get the directory where tracks are stored. The directory can be defined with environmental variable. If not defined the default is a directory called ","text":"get_tracks_dir Get directory tracks stored. directory can defined environmental variable. defined default directory called \"tracks\" temp directory. need local directory write files - instance, vcf file representing genomic region interest. tell shiny directory, shiny's built-http server can serve files write , ultimately consumed igv.js","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_tracks_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_tracks_dir Get the directory where tracks are stored. The directory can be defined with environmental variable. If not defined the default is a directory called ","text":"","code":"get_tracks_dir(env_var = \"TRACKS_DIR\")"},{"path":"https://gladkia.github.io/igvShiny/reference/get_tracks_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_tracks_dir Get the directory where tracks are stored. The directory can be defined with environmental variable. If not defined the default is a directory called ","text":"env_var name environmental variable use.","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_tracks_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_tracks_dir Get the directory where tracks are stored. The directory can be defined with environmental variable. If not defined the default is a directory called ","text":"string path tracks directory.","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/get_tracks_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_tracks_dir Get the directory where tracks are stored. The directory can be defined with environmental variable. If not defined the default is a directory called ","text":"","code":"gtd <- get_tracks_dir(env_var = \"TRACKS_DIR\")"},{"path":"https://gladkia.github.io/igvShiny/reference/igvShiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an igvShiny instance — igvShiny","title":"Create an igvShiny instance — igvShiny","text":"function called server function shiny app","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/igvShiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an igvShiny instance — igvShiny","text":"","code":"igvShiny(   genomeOptions,   width = NULL,   height = NULL,   elementId = NULL,   displayMode = \"squished\",   tracks = list() )"},{"path":"https://gladkia.github.io/igvShiny/reference/igvShiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an igvShiny instance — igvShiny","text":"genomeOptions list fields: genomeName, initialLocus, annotation, dataMode, fasta, fastaIndex, stockGenome, validated width character string, standard css notations, either e.g., \"1000px\" \"95%\" height character string, needs explicit pixel measure, e.g., \"800px\" elementId character string, html element id within igv created displayMode character string, default \"SQUISHED\". tracks list track specifications created displayed startup","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/igvShiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an igvShiny instance — igvShiny","text":"created widget","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/igvShiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an igvShiny instance — igvShiny","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/igvShinyOutput.html","id":null,"dir":"Reference","previous_headings":"","what":"create the UI for the widget — igvShinyOutput","title":"create the UI for the widget — igvShinyOutput","text":"function called ui function shiny app","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/igvShinyOutput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create the UI for the widget — igvShinyOutput","text":"","code":"igvShinyOutput(outputId, width = \"100%\", height = NULL)"},{"path":"https://gladkia.github.io/igvShiny/reference/igvShinyOutput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create the UI for the widget — igvShinyOutput","text":"outputId character string, specifies html element id width character string, standard css notations, either e.g., \"1000px\" \"95%\", \"100%\" default height character string, needs explicit pixel measure, e.g., \"800px\", \"400px\" default","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/igvShinyOutput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create the UI for the widget — igvShinyOutput","text":"created widget's html","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/igvShinyOutput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create the UI for the widget — igvShinyOutput","text":"","code":"io <- igvShinyOutput(\"igvOut\")"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromLocalData.html","id":null,"dir":"Reference","previous_headings":"","what":"load GenomicAlignments data as an igv.js alignment track — loadBamTrackFromLocalData","title":"load GenomicAlignments data as an igv.js alignment track — loadBamTrackFromLocalData","text":"load GenomicAlignments data  igv.js alignment track","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromLocalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load GenomicAlignments data as an igv.js alignment track — loadBamTrackFromLocalData","text":"","code":"loadBamTrackFromLocalData(   session,   id,   trackName,   data,   deleteTracksOfSameName = TRUE,   displayMode = \"EXPANDED\" )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromLocalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load GenomicAlignments data as an igv.js alignment track — loadBamTrackFromLocalData","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string data GenomicAlignments object deleteTracksOfSameName logical, default TRUE displayMode character string, possible values \"EXPANDED\"(default), \"SQUISHED\" \"COLLAPSED\"","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromLocalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load GenomicAlignments data as an igv.js alignment track — loadBamTrackFromLocalData","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromLocalData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load GenomicAlignments data as an igv.js alignment track — loadBamTrackFromLocalData","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromURL.html","id":null,"dir":"Reference","previous_headings":"","what":"load a bam track which, with index, is served up by http — loadBamTrackFromURL","title":"load a bam track which, with index, is served up by http — loadBamTrackFromURL","text":"load remote bam track","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromURL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a bam track which, with index, is served up by http — loadBamTrackFromURL","text":"","code":"loadBamTrackFromURL(   session,   id,   trackName,   bamURL,   indexURL,   deleteTracksOfSameName = TRUE,   displayMode = \"EXPANDED\",   showAllBases = FALSE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromURL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a bam track which, with index, is served up by http — loadBamTrackFromURL","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string bamURL character string http url bam file, typically large indexURL character string http url bam file index, typically small deleteTracksOfSameName logical, default TRUE displayMode character string, possible values \"EXPANDED\"(default), \"SQUISHED\" \"COLLAPSED\" showAllBases logical, show bases alignment, default FALSE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromURL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a bam track which, with index, is served up by http — loadBamTrackFromURL","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBamTrackFromURL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a bam track which, with index, is served up by http — loadBamTrackFromURL","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedGraphTrackFromURL.html","id":null,"dir":"Reference","previous_headings":"","what":"load a bedgraph track from a URL — loadBedGraphTrackFromURL","title":"load a bedgraph track from a URL — loadBedGraphTrackFromURL","text":"load bedgraph track provided data.frame","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedGraphTrackFromURL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a bedgraph track from a URL — loadBedGraphTrackFromURL","text":"","code":"loadBedGraphTrackFromURL(   session,   id,   trackName,   url,   color = \"gray\",   trackHeight = 30,   autoscale = TRUE,   min = 0,   max = 1,   autoscaleGroup = -1,   deleteTracksOfSameName = TRUE,   quiet = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedGraphTrackFromURL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a bedgraph track from a URL — loadBedGraphTrackFromURL","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string url character color character string, legal CSS color, \"random\", \"gray\" default trackHeight integer, 30 (pixels) default autoscale logical min numeric, consulted autoscale FALSE max numeric, consulted autoscale FALSE autoscaleGroup numeric(1) defaults -1 deleteTracksOfSameName logical(1) defaults TRUE quiet logical, default TRUE, controls verbosity","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedGraphTrackFromURL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a bedgraph track from a URL — loadBedGraphTrackFromURL","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedGraphTrackFromURL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a bedgraph track from a URL — loadBedGraphTrackFromURL","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"load a bed track provided as a data.frame — loadBedTrack","title":"load a bed track provided as a data.frame — loadBedTrack","text":"load bed track provided data.frame","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a bed track provided as a data.frame — loadBedTrack","text":"","code":"loadBedTrack(   session,   id,   trackName,   tbl,   color = \"\",   trackHeight = 50,   deleteTracksOfSameName = TRUE,   quiet = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a bed track provided as a data.frame — loadBedTrack","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string tbl data.frame, least \"chrom\" \"start\" \"end\" columns color character string, legal CSS color, \"random\", \"gray\" default trackHeight integer, 50 (pixels) default deleteTracksOfSameName logical, default TRUE quiet logical, default TRUE, controls verbosity","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a bed track provided as a data.frame — loadBedTrack","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadBedTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a bed track provided as a data.frame — loadBedTrack","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadCramTrackFromURL.html","id":null,"dir":"Reference","previous_headings":"","what":"load a cram track which, with index, is served up by http — loadCramTrackFromURL","title":"load a cram track which, with index, is served up by http — loadCramTrackFromURL","text":"load remote cram track","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadCramTrackFromURL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a cram track which, with index, is served up by http — loadCramTrackFromURL","text":"","code":"loadCramTrackFromURL(   session,   id,   trackName,   cramURL,   indexURL,   deleteTracksOfSameName = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadCramTrackFromURL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a cram track which, with index, is served up by http — loadCramTrackFromURL","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string cramURL character string http url bam file, typically large indexURL character string http url bam file index, typically small deleteTracksOfSameName logical, default TRUE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadCramTrackFromURL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a cram track which, with index, is served up by http — loadCramTrackFromURL","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadCramTrackFromURL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a cram track which, with index, is served up by http — loadCramTrackFromURL","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromLocalData.html","id":null,"dir":"Reference","previous_headings":"","what":"load a GFF3 track defined by local data — loadGFF3TrackFromLocalData","title":"load a GFF3 track defined by local data — loadGFF3TrackFromLocalData","text":"load local GFF3 track file","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromLocalData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a GFF3 track defined by local data — loadGFF3TrackFromLocalData","text":"","code":"loadGFF3TrackFromLocalData(   session,   id,   trackName,   tbl.gff3,   color = \"gray\",   colorTable,   colorByAttribute,   displayMode,   trackHeight = 50,   visibilityWindow,   deleteTracksOfSameName = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromLocalData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a GFF3 track defined by local data — loadGFF3TrackFromLocalData","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string tbl.gff3 data.frame  standard 9-column GFF3 format color character #RGB recognized color name.  ignored colorTable colorByAttribute provided colorTable list, mapping gff3 attribute, typically biotype, color colorByAttribute character, name gff3 attribute column 9, typically \"biotype\" displayMode character,  \"EXPANDED\",  \"SQUISHED\" \"COLLAPSED\" trackHeight numeric defaults 50 visibilityWindow numeric, Maximum window size base pairs indexed annotations variants displayed deleteTracksOfSameName logical, default TRUE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromLocalData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a GFF3 track defined by local data — loadGFF3TrackFromLocalData","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromLocalData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a GFF3 track defined by local data — loadGFF3TrackFromLocalData","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo-GFF3.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromURL.html","id":null,"dir":"Reference","previous_headings":"","what":"load a GFF3 track which, with index, is served up by http — loadGFF3TrackFromURL","title":"load a GFF3 track which, with index, is served up by http — loadGFF3TrackFromURL","text":"load remote GFF3 track","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromURL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a GFF3 track which, with index, is served up by http — loadGFF3TrackFromURL","text":"","code":"loadGFF3TrackFromURL(   session,   id,   trackName,   gff3URL,   indexURL,   color = \"gray\",   colorTable,   colorByAttribute,   displayMode,   trackHeight = 50,   visibilityWindow,   deleteTracksOfSameName = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromURL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a GFF3 track which, with index, is served up by http — loadGFF3TrackFromURL","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string gff3URL character string http url bam file, typically large indexURL character string http url bam file index, typically small color character #RGB recognized color name.  ignored colorTable colorByAttribute provided colorTable list, mapping gff3 attribute, typically biotype, color colorByAttribute character, name gff3 attribute column 9, typically \"biotype\" displayMode character,  \"EXPANDED\",  \"SQUISHED\" \"COLLAPSED\" trackHeight numeric defaults 50 visibilityWindow numeric, Maximum window size base pairs indexed annotations variants displayed deleteTracksOfSameName logical, default TRUE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromURL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a GFF3 track which, with index, is served up by http — loadGFF3TrackFromURL","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGFF3TrackFromURL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a GFF3 track which, with index, is served up by http — loadGFF3TrackFromURL","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo-GFF3.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGenomeAnnotationTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"load a scored genome annotation track provided as a data.frame — loadBedGraphTrack","title":"load a scored genome annotation track provided as a data.frame — loadBedGraphTrack","text":"load genome annotation track provided data.frame","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGenomeAnnotationTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a scored genome annotation track provided as a data.frame — loadBedGraphTrack","text":"","code":"loadBedGraphTrack(   session,   id,   trackName,   tbl,   color = \"gray\",   trackHeight = 30,   autoscale,   autoscaleGroup = -1,   min = NA_real_,   max = NA_real_,   deleteTracksOfSameName = TRUE,   quiet = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGenomeAnnotationTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a scored genome annotation track provided as a data.frame — loadBedGraphTrack","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string tbl data.frame, least \"chrom\" \"start\" \"end\" \"score\" columns color character string, legal CSS color, \"random\", \"gray\" default trackHeight integer, 30 (pixels) default autoscale logical autoscaleGroup numeric(1) defaults -1 min numeric, consulted autoscale FALSE max numeric, consulted autoscale FALSE deleteTracksOfSameName logical, default TRUE quiet logical, default TRUE, controls verbosity","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGenomeAnnotationTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a scored genome annotation track provided as a data.frame — loadBedGraphTrack","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGenomeAnnotationTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a scored genome annotation track provided as a data.frame — loadBedGraphTrack","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGwasTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"load a GWAS (genome-wide association study) track provided as a data.frame — loadGwasTrack","title":"load a GWAS (genome-wide association study) track provided as a data.frame — loadGwasTrack","text":"load GWAS (genome-wide association study) track provided data.frame","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGwasTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a GWAS (genome-wide association study) track provided as a data.frame — loadGwasTrack","text":"","code":"loadGwasTrack(   session,   id,   trackName,   tbl.gwas,   ymin = 0,   ymax = 35,   deleteTracksOfSameName = TRUE )"},{"path":"https://gladkia.github.io/igvShiny/reference/loadGwasTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a GWAS (genome-wide association study) track provided as a data.frame — loadGwasTrack","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string tbl.gwas data.frame, least \"chrom\" \"start\" \"end\" columns ymin numeric defaults 0 ymax numeric defaults 35 deleteTracksOfSameName logical, default TRUE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGwasTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a GWAS (genome-wide association study) track provided as a data.frame — loadGwasTrack","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadGwasTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a GWAS (genome-wide association study) track provided as a data.frame — loadGwasTrack","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadSEGTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"load a seg track provided as a data.frame — loadSegTrack","title":"load a seg track provided as a data.frame — loadSegTrack","text":"load SEG track provided data.frame.  igv \"displays segmented data blue--red heatmap data range -1.5 1.5... segmented data file format output Circular Binary Segmentation algorithm (Olshen et al., 2004)\".","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadSEGTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a seg track provided as a data.frame — loadSegTrack","text":"","code":"loadSegTrack(session, id, trackName, tbl, deleteTracksOfSameName = TRUE)"},{"path":"https://gladkia.github.io/igvShiny/reference/loadSEGTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a seg track provided as a data.frame — loadSegTrack","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string tbl data.frame, least \"chrom\" \"start\" \"end\" \"score\" columns deleteTracksOfSameName logical, default TRUE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadSEGTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a seg track provided as a data.frame — loadSegTrack","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadSEGTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a seg track provided as a data.frame — loadSegTrack","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/loadVcfTrack.html","id":null,"dir":"Reference","previous_headings":"","what":"load a VCF (variant) track provided as a Bioconductor VariantAnnotation object — loadVcfTrack","title":"load a VCF (variant) track provided as a Bioconductor VariantAnnotation object — loadVcfTrack","text":"load VCF (variant) track provided Bioconductor VariantAnnotation object","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadVcfTrack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"load a VCF (variant) track provided as a Bioconductor VariantAnnotation object — loadVcfTrack","text":"","code":"loadVcfTrack(session, id, trackName, vcfData, deleteTracksOfSameName = TRUE)"},{"path":"https://gladkia.github.io/igvShiny/reference/loadVcfTrack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"load a VCF (variant) track provided as a Bioconductor VariantAnnotation object — loadVcfTrack","text":"session environment list, provided managed shiny id character string, html element id widget instance trackName character string vcfData VariantAnnotation object deleteTracksOfSameName logical, default TRUE","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadVcfTrack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"load a VCF (variant) track provided as a Bioconductor VariantAnnotation object — loadVcfTrack","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/loadVcfTrack.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"load a VCF (variant) track provided as a Bioconductor VariantAnnotation object — loadVcfTrack","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo-withVCF.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/parseAndValidateGenomeSpec.html","id":null,"dir":"Reference","previous_headings":"","what":"parseAndValidateGenomeSpec — parseAndValidateGenomeSpec","title":"parseAndValidateGenomeSpec — parseAndValidateGenomeSpec","text":"helper function internal use igvShiny constructor, possible also use building igvShiny app, test genome specification validity","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/parseAndValidateGenomeSpec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parseAndValidateGenomeSpec — parseAndValidateGenomeSpec","text":"","code":"parseAndValidateGenomeSpec(   genomeName,   initialLocus = \"all\",   stockGenome = TRUE,   dataMode = NA,   fasta = NA,   fastaIndex = NA,   genomeAnnotation = NA )"},{"path":"https://gladkia.github.io/igvShiny/reference/parseAndValidateGenomeSpec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parseAndValidateGenomeSpec — parseAndValidateGenomeSpec","text":"genomeName character usually one short code supported (\"stock\") genome (e.g., \"hg38\") user-supplied custom genome, name wish use initialLocus character default \"\", otherwise \"chrN:start-end\" recognized gene symbol stockGenome logical default TRUE dataMode character either \"stock\", \"localFile\" \"http\" fasta character supplying custom (non-stock) genome, either file path URL fastaIndex character supplying custom (non-stock) genome, either file path URL, essential small custom genomes. genomeAnnotation character supplying custom (non-stock) genome, file path URL pointing genome annotation file gff3 format","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/parseAndValidateGenomeSpec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parseAndValidateGenomeSpec — parseAndValidateGenomeSpec","text":"options list directly usable igvApp.js, thus igv.js","code":""},{"path":[]},{"path":"https://gladkia.github.io/igvShiny/reference/parseAndValidateGenomeSpec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"parseAndValidateGenomeSpec — parseAndValidateGenomeSpec","text":"","code":"genomeSpec <-   parseAndValidateGenomeSpec(\"hg38\", \"APOE\")  # the simplest case base.url <-   \"https://gladki.pl/igvr/testFiles/sarsGenome\" fasta.file <-   sprintf(\"%s/%s\", base.url, \"Sars_cov_2.ASM985889v3.dna.toplevel.fa\") fastaIndex.file <-   sprintf(\"%s/%s\",           base.url,           \"Sars_cov_2.ASM985889v3.dna.toplevel.fa.fai\") annotation.file <-   sprintf(\"%s/%s\", base.url, \"Sars_cov_2.ASM985889v3.101.gff3\") custom.genome.title <- \"SARS-CoV-2\" genomeOptions <-   parseAndValidateGenomeSpec(     genomeName = custom.genome.title,     initialLocus = \"all\",     stockGenome = FALSE,     dataMode = \"http\",     fasta = fasta.file,     fastaIndex = fastaIndex.file,     genomeAnnotation = annotation.file   )"},{"path":"https://gladkia.github.io/igvShiny/reference/removeTracksByName.html","id":null,"dir":"Reference","previous_headings":"","what":"remove tracks from the browser — removeTracksByName","title":"remove tracks from the browser — removeTracksByName","text":"delete tracks browser","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/removeTracksByName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove tracks from the browser — removeTracksByName","text":"","code":"removeTracksByName(session, id, trackNames)"},{"path":"https://gladkia.github.io/igvShiny/reference/removeTracksByName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove tracks from the browser — removeTracksByName","text":"session environment list, provided managed shiny id character string, html element id widget instance trackNames vector character strings","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/removeTracksByName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove tracks from the browser — removeTracksByName","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/removeTracksByName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"remove tracks from the browser — removeTracksByName","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/removeUserAddedTracks.html","id":null,"dir":"Reference","previous_headings":"","what":"remove only those tracks explicitly added by your app — removeUserAddedTracks","title":"remove only those tracks explicitly added by your app — removeUserAddedTracks","text":"remove tracks explicitly added app. stock tracks (.e., #' Refseq Genes) remain","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/removeUserAddedTracks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"remove only those tracks explicitly added by your app — removeUserAddedTracks","text":"","code":"removeUserAddedTracks(session, id)"},{"path":"https://gladkia.github.io/igvShiny/reference/removeUserAddedTracks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"remove only those tracks explicitly added by your app — removeUserAddedTracks","text":"session environment list, provided managed shiny id character string, html element id widget instance","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/removeUserAddedTracks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"remove only those tracks explicitly added by your app — removeUserAddedTracks","text":"nothing","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/removeUserAddedTracks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"remove only those tracks explicitly added by your app — removeUserAddedTracks","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/renderIgvShiny.html","id":null,"dir":"Reference","previous_headings":"","what":"draw the igv genome browser element — renderIgvShiny","title":"draw the igv genome browser element — renderIgvShiny","text":"function called server function shiny app","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/renderIgvShiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"draw the igv genome browser element — renderIgvShiny","text":"","code":"renderIgvShiny(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://gladkia.github.io/igvShiny/reference/renderIgvShiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"draw the igv genome browser element — renderIgvShiny","text":"expr expression generates HTML widget env environment evaluate expr quoted logical flag indicating expr quoted expression","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/renderIgvShiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"draw the igv genome browser element — renderIgvShiny","text":"output render function enables use widget within Shiny applications","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/renderIgvShiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"draw the igv genome browser element — renderIgvShiny","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/reference/showGenomicRegion.html","id":null,"dir":"Reference","previous_headings":"","what":"focus igv on a region — showGenomicRegion","title":"focus igv on a region — showGenomicRegion","text":"zoom show nominated region, chromosome locus gene symbol return current region displayed igv instance","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/showGenomicRegion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"focus igv on a region — showGenomicRegion","text":"","code":"showGenomicRegion(session, id, region)  getGenomicRegion(session, id)"},{"path":"https://gladkia.github.io/igvShiny/reference/showGenomicRegion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"focus igv on a region — showGenomicRegion","text":"session environment list, provided managed shiny id character string, html element id widget instance region character string, either e.g. \"chr5:92,221,640-92,236,523\" \"MEF2C\"","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/showGenomicRegion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"focus igv on a region — showGenomicRegion","text":"character string format \"chrom:start-end\"","code":""},{"path":"https://gladkia.github.io/igvShiny/reference/showGenomicRegion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"focus igv on a region — showGenomicRegion","text":"","code":"library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }  library(igvShiny) demo_app_file <-   system.file(package = \"igvShiny\", \"demos\", \"igvShinyDemo.R\") if (interactive()) {   shiny::runApp(demo_app_file) }"},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-151---2025-09-01","dir":"Changelog","previous_headings":"","what":"igvShiny 1.5.1 - 2025-09-01","title":"igvShiny 1.5.1 - 2025-09-01","text":"migrate RUnit testthat","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-115---2024-08-29","dir":"Changelog","previous_headings":"","what":"igvShiny 1.1.5 - 2024-08-29","title":"igvShiny 1.1.5 - 2024-08-29","text":"fix issue loading bed files app run query strings","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-114---2024-08-25","dir":"Changelog","previous_headings":"","what":"igvShiny 1.1.4 - 2024-08-25","title":"igvShiny 1.1.4 - 2024-08-25","text":"switch Rcurl::url.exists httr::http_error (Windows compatibility)","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-113---2024-08-25","dir":"Changelog","previous_headings":"","what":"igvShiny 1.1.3 - 2024-08-25","title":"igvShiny 1.1.3 - 2024-08-25","text":"stop using Amazon S3 URLs default","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-112---2024-08-16","dir":"Changelog","previous_headings":"","what":"igvShiny 1.1.2 - 2024-08-16","title":"igvShiny 1.1.2 - 2024-08-16","text":"fix issue VCF files","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-111---2024-08-10","dir":"Changelog","previous_headings":"","what":"igvShiny 1.1.1 - 2024-08-10","title":"igvShiny 1.1.1 - 2024-08-10","text":"fix issue custom files working properly","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-100---2024-08-10","dir":"Changelog","previous_headings":"","what":"igvShiny 1.0.0 - 2024-08-10","title":"igvShiny 1.0.0 - 2024-08-10","text":"sync Bioconductor (3_19 release)","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0997---2024-04-23","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.7 - 2024-04-23","title":"igvShiny 0.99.7 - 2024-04-23","text":"change file links igv-data.systemsbiology.net gladki.pl/igvr","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0996---2024-03-16","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.6 - 2024-03-16","title":"igvShiny 0.99.6 - 2024-03-16","text":"add shinytest2 igvShinyDemo-GFF3.R","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0995---2024-03-14","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.5 - 2024-03-14","title":"igvShiny 0.99.5 - 2024-03-14","text":"make igvShiny demo app GFF3 working update trackName GFF3 (URL) udpate path local GFF3","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0994---2024-02-28","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.4 - 2024-02-28","title":"igvShiny 0.99.4 - 2024-02-28","text":"add pkgdown content","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0993---2024-02-16","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.3 - 2024-02-16","title":"igvShiny 0.99.3 - 2024-02-16","text":"fix bug function loadBamTrackFromLocalData improvge way loading BAM files - show mismatches","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0992---2024-02-09","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.2 - 2024-02-09","title":"igvShiny 0.99.2 - 2024-02-09","text":"fix Bioconductor NOTEs","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0991---2024-02-05","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.1 - 2024-02-05","title":"igvShiny 0.99.1 - 2024-02-05","text":"fix Bioconductor NOTEs","code":""},{"path":"https://gladkia.github.io/igvShiny/news/index.html","id":"igvshiny-0990---2024-02-04","dir":"Changelog","previous_headings":"","what":"igvShiny 0.99.0 - 2024-02-04","title":"igvShiny 0.99.0 - 2024-02-04","text":"make first Bioconductor release","code":""}]
